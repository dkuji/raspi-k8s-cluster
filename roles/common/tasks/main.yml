---
# tasks file for common

# google-cloud-sdk,awscliをインストール
- name:
  stat:
    path: /etc/apt/sources.list.d/google-cloud-sdk.list
  register: result_source_list_google_cloud_sdk_list

- name: set google-cloud-sdk-repo if google-cloud-sdk.list does not exists.
  block:
    - name: get lsb_release
      shell: |
        lsb_release -c -s
      register: result_lsb_release
    
    - name: setup google-cloud repo
      environment:
        CLOUD_SDK_REPO: "cloud-sdk-{{ result_lsb_release.stdout }}"
      shell: |
        echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
        curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
  when:
    - not result_source_list_google_cloud_sdk_list.stat.exists

- name: apt install
  apt:
    name:
      - python-pip
      - python-pysocks
      - google-cloud-sdk

    state: present
    update_cache: yes

- name: pip upgrade
  pip:
    name: pip
    state: latest

- name: pip install aws-cli
  #become: yes
  #become_user: pi
  pip:
    name: awscli
    state: present

- name: set timezone
  timezone:
    name: Asia/Tokyo

- name: enable alias for Debian,Ubuntu
  become: yes
  become_user: "{{ item }}"
  blockinfile:
    path: ~/.profile
    create: yes
    owner: "{{ item }}"
    group: "{{ item }}"
    mode: 0644
    marker: "# {mark} ANSIBLE MANAGED BLOCK enable alias"
    backup: yes
    block: |
      export LS_OPTIONS='--color=auto'
      eval "`dircolors`"
      alias ls='ls $LS_OPTIONS'
      alias ll='ls $LS_OPTIONS -l'
      alias l='ls $LS_OPTIONS -lA'
  with_items:
    - "root"
    - "pi"
  when:
    ansible_distribution == "Debian"

- name: apt install
  apt:
    name:
      - dnsutils
      - telnet
      - vim
      - tcpdump
      - jq
      - lsof
      - unattended-upgrades
    state: present
    update_cache: yes

- name: enable auto apt-upgrade
  become: yes
  lineinfile:
    path: /etc/apt/apt.conf.d/50unattended-upgrades
    backup: yes
    backrefs: yes
    state: present
    regexp: '^//(Unattended-Upgrade::InstallOnShutdown ).*;$'
    line: '\1 "true" ;'



